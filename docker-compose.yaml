version: '3.8'

services:
  # The DynamoDB Local database service
  dynamodb:
    # FIX: Build the image from the custom Dockerfile to ensure correct permissions
    build:
      context: .
      dockerfile: dynamodb-Dockerfile
    # FIX: Using the service name as the container name for consistency
    container_name: dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /data"
    volumes:
      - ./dynamodb_data:/data
    networks:
      - gatekeeper-net

  # The service to initialize the database
  init:
    build:
      context: .
      dockerfile: dbinit-Dockerfile
    # FIX: Use the wait-for-it.sh script to explicitly wait for the DB
    # This prevents the container from restarting and makes startup more robust.
    # The command now waits for 'dynamodb:8000' before executing the python script.
    command: ["./wait-for-it.sh", "dynamodb", "python", "init_db.py"]
    # REMOVED: The 'restart: on-failure' is no longer the primary wait mechanism.
    depends_on:
      - dynamodb
    networks:
      - gatekeeper-net

  # The FastAPI application service
  api:
    build:
      context: .
      dockerfile: api-Dockerfile
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - "8001:8000"
    environment:
      - IS_LOCAL=true
    depends_on:
      # FIX: The API should wait for the init service to complete successfully
      # to ensure tables exist before the API starts.
      - init
    networks:
      - gatekeeper-net

# Define the custom network
networks:
  gatekeeper-net:
    driver: bridge
